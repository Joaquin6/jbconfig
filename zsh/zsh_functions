#############################################################
######################### Functions #########################
#############################################################


reloadTerm () { exec $SHELL -l ; }

#   nyg: shortcut to globally install pkgs with npm AND yarn
#   ------------------------------------------------------------
nyg () { npm install --global "$1" && yarn global add "$1" ; }

#   nyg: shortcut to globally install pkgs with npm AND yarn
#   ------------------------------------------------------------
yarn_reinstall () { sudo yarn remove "$1" && sudo yarn add "$1" ; }
yarn_reinstall_latest () { sudo yarn remove "$1" && sudo yarn add "$1@latest" ; }
yarn_reinstall_latest_exact () { sudo yarn remove "$1" && sudo yarn add "$1@latest" --exact ; }
yarn_reinstall_latest_exact_dev () { sudo yarn remove "$1" && sudo yarn add "$1@latest" --exact --dev ; }

#   showa: to remind yourself of an alias (given some part of it)
#   ------------------------------------------------------------
showa () { /usr/bin/grep --color=always -i -a1 "$@" $HOME/.zsh_aliases | grep -v '^\s*$' | less -FSRXc ; }


#   ---------------------------
#   4. SEARCHING
#   ---------------------------

ff () { /usr/bin/find . -name "$@" ; }      # ff:       Find file under the current directory
ffs () { /usr/bin/find . -name "$@"'*' ; }  # ffs:      Find file whose name starts with a given string
ffe () { /usr/bin/find . -name '*'"$@" ; }  # ffe:      Find file whose name ends with a given string

#   ---------------------------
#   5. PROCESS MANAGEMENT
#   ---------------------------

#   findPid: find out the pid of a specified process
#   -----------------------------------------------------
#       Note that the command name can be specified via a regex
#       E.g. findPid '/d$/' finds pids of all processes with names ending in 'd'
#       Without the 'sudo' it will only find processes of the current user
#   -----------------------------------------------------
findPid () { lsof -t -c "$@" ; }

#   my_ps: List processes owned by my user:
#   ------------------------------------------------------------
my_ps() { ps $@ -u $USER -o pid,%cpu,%mem,start,time,bsdtime,command ; }


#   ---------------------------
#   -- PERMISSIONS
#   ---------------------------
show_all_users() { cut -d ":" -f 1 /etc/passwd ; }
permitme() { pkexec chown $USER:adm $PWD -hR ; }
users_by_group() { getent group "$1" | awk -F: '{print $4}' ; }

__confirm_existence()
{
	if [[ -d $1 ]] && [[ -n $1 ]] ; then
		echo "\t\tDeleting Directory $1"
		return 0
	fi

	if [[ -f $1 ]] && [[ -n $1 ]] ; then
		echo "\t\tDeleting File $1"
		return 0
	fi

	return 1
}

__trash()
{
	if which rimraf &> /dev/null; then
		sudo rimraf $1 -s
	else
		sudo rm -rf $1
	fi
	echo "\n\t\tSuccessfully Trashed $1"
}

trash()
{
	if __confirm_existence $1; then
		__trash $1
	fi;
	echo
}

# Inexa Cloud Alias Functions
# ---------------------------
inexa_yarn()
{
	cd $HOME/projects/bitbucket/inexa-composed/$1
	sleep 2
	sudo yarn
	sleep 5
}
inexa_clean()
{
	cd $HOME/projects/bitbucket/inexa-composed/$1
	sleep 2
	trash $PWD/node_modules
	sleep 10
	yarn cache clean
	sleep 5
	echo "\n\t\tSuccessfully Cleaned ${PWD}\n"
}
inexa_wipeout()
{
	inexa_clean core-service;

	inexa_clean frontend;
}
inexa_deps() { inexa_yarn inexa-composed/core-service & sleep 5 && inexa_yarn inexa-composed/frontend & sleep 5 ; }
inexa_prepare() { inexa_wipeout && inexa_deps ; }
inexa_boot() { cd ~/projects/bitbucket/inexa-composed && bash ./boot.sh ; }
inexa_reboot() { cd ~/projects/bitbucket/inexa-composed && bash ./reboot.sh ; }
inexa_pull_all() { cd ~/projects/bitbucket/inexa-composed && bash ./pull.sh ; }
inexa_pull_all_master() { cd ~/projects/bitbucket/inexa-composed && bash ./master.sh ; }
# values to pass in: 'frontend', 'core-service'
inexa_dcbash() { cd ~/projects/bitbucket/inexa-composed && dco run "$@" bash ; }
inexa_dcup() { cd ~/projects/bitbucket/inexa-composed & sleep 5 && sudo docker-compose up & sleep 30 ; chromium-browser 'http://localhost:3000' }
# master commands
inexa_run_local_from_scratch() { inexa_prepare && inexa_dcup ; }
